#include <GL/glut.h>
#include <iostream>

void RenderScene(void) {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0f, 0.0f, 0.0f); // 빨간색

    int totalLines = 15;
    float yStart = 90.0f;
    float yStep = 12.0f;

    for (int i = 0; i < totalLines; ++i) {
        float y = yStart - i * yStep;

        int segmentCount = 4 + i; // 점점 늘어나게
        float totalWidth = 160.0f;
        float gapRatio = 0.5f; // 간격 비율
        float segmentWidth = totalWidth / (segmentCount + (segmentCount - 1) * gapRatio);
        float gapWidth = segmentWidth * gapRatio;

        float xStart = -totalWidth / 2.0f;

        for (int j = 0; j < segmentCount; ++j) {
            float x1 = xStart + j * (segmentWidth + gapWidth);
            float x2 = x1 + segmentWidth;

            glBegin(GL_LINES);
            glVertex2f(x1, y);
            glVertex2f(x2, y);
            glEnd();
        }
    }

    glutSwapBuffers();
}

void SetupRC(void) {
    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
}

void ChangeSize(GLsizei w, GLsizei h) {
    if (h == 0) h = 1;
    GLfloat aspectRatio = (GLfloat)w / (GLfloat)h;

    glViewport(0, 0, w, h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();

    if (w <= h)
        glOrtho(-100.0, 100.0, -100.0 / aspectRatio, 100.0 / aspectRatio, -1.0, 1.0);
    else
        glOrtho(-100.0 * aspectRatio, 100.0 * aspectRatio, -100.0, 100.0, -1.0, 1.0);

    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("simple");

    SetupRC();
    glutDisplayFunc(RenderScene);
    glutReshapeFunc(ChangeSize);
    glutMainLoop();
}
