#include <GL/glut.h>
#include <stdio.h>
#include <iostream>
#include <cmath>;
#define GL_PI 3.1415f

bool bCull = true;

GLfloat xTran = 0.0f;
GLfloat yTran = 0.0f;
GLfloat xRot = 0.0f;
GLfloat yRot = 0.0f;
GLfloat x, y, z;

void RenderScene(void) {
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

    glColor3f(0.0f, 0.0f, 0.0f);
    
    GLfloat lineWidth = 1.0f;
    GLfloat sizes[2];
    glTranslatef(0.0f, 0.0f, -30.0f);    //뒤로 조금 이동
    glRotatef(30.0f, 1.0f, 0.0f, 0.0f);  // x축으로 30도 회전(위에서 내려다보기)
    glRotatef(-30.0f, 0.0f, 1.0f, 0.0f); // y축으로-30도 회전(측면에서 보기)

    glBegin(GL_LINES);
    glColor3f(0.0f, 1.0f, 0.0f);
    glVertex3f(0, 0, 0);
    glVertex3f(0, 40, 0);
    glEnd();


    glColor3f(0.0f, 0.0f, 1.0f);
    glEnable(GL_LINE_STIPPLE); // 점선 활성화
    glLineStipple(1, 0x00FF);  // 점선 패턴
    glLineWidth(lineWidth);
    glutWireCube(20.0f);
    glTranslatef(0.0f, 40.0f, 0.0f);
    glDisable(GL_LINE_STIPPLE);
    glColor3f(1.0f, 0.0f, 0.0f);
    glutWireCube(20.0f);

    


    glPopMatrix();
    glutSwapBuffers();
}

void keyboard(unsigned char key, int x, int y) {
    if (key == 'a')
        xTran += 2.0f;
    else if (key == 'd')
        xTran -= 2.0f;
    else if (key == 'w')
        yTran += 2.0f;
    else if (key == 's')
        yTran -= 2.0f;

    glutPostRedisplay();
}

void SpecialKeys(int key, int x, int y)
{
    if (key == GLUT_KEY_UP)
        xRot -= 2.0f;
    else if (key == GLUT_KEY_DOWN)
        xRot += 2.0f;
    else if (key == GLUT_KEY_LEFT)
        yRot -= 2.0f;
    else if (key == GLUT_KEY_RIGHT)
        yRot += 2.0f;

    //예외 처리
    if (xRot > 360.0f)
        xRot -= 360.0f;
    if (xRot < 0.0f)
        xRot += 360.0f;
    if (yRot > 360.0f)
        yRot -= 360.0f;
    if (yRot < 0.0f)
        yRot += 360.0f;

    glutPostRedisplay();
}

void SetupRC(void) {
    std::cout << "SetupRC" << std::endl;
    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
    glShadeModel(GL_FLAT);

}

void ChangeSize(GLsizei w, GLsizei h) {
    std::cout << "w = " << w << " " << " h = " << h << std::endl;
    std::cout << "ChangeSize" << std::endl;

    GLint wSize = 1;
    GLfloat aspectRatio;

    if (h == 0) {
        h = 1;
    }
    glViewport(0, 0, w, h);

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();

    aspectRatio = (GLfloat)w / (GLfloat)h;
    if (w <= h)
        glOrtho(-100, 100, -100 / aspectRatio, 100 / aspectRatio, -500, 500);
    else
        glOrtho(-100 * aspectRatio, 100 * aspectRatio, -100, 100, -500, 500);

    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();

    gluLookAt( // +z 방향 바라보도록 카메라 위치 조정
        0.0, 0.0, 0.0,    // 카메라 위치
        0.0, 0.0, 1.0,    // 바라보는 지점 (+z 방향)
        0.0, 1.0, 0.0     // 업 벡터
    );
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("simple");

    SetupRC();
    glutDisplayFunc(RenderScene);
    glutReshapeFunc(ChangeSize);
    //glutKeyboardFunc(keyboard);
    //glutSpecialFunc(SpecialKeys);
    glutMainLoop();
}
